# stages:
#   - deploy-dev
#   - deploy-prod

# deploy-to-vercel-prod:
#   stage: deploy-prod
#   image: node:13.10.1-alpine3.10
#   rules:
#     - when: manual

#   script:
#     - npm i vercel
#     - DEPLOYMENT_URL=$(./node_modules/.bin/vercel --name $CI_PROJECT_NAME --confirm -t $VERCEL_TOKEN)
#     # promote to the vercel's production
#     - ./node_modules/.bin/vercel --prod -t $VERCEL_TOKEN

# deploy-to-vercel-dev:
#   stage: deploy-dev
#   image: node:13.10.1-alpine3.10

#   script:
#     - npm i vercel
#     - DEPLOYMENT_URL=$(./node_modules/.bin/vercel --name versehub-dev --confirm -t $VERCEL_TOKEN)
#     # promote to the vercel's production
#     - ./node_modules/.bin/vercel --prod -t $VERCEL_TOKEN
default:
  image: node:14.15.0
variables:
  VERCEL_TOKEN: $VERCEL_TOKEN

deploy_preview:
  stage: deploy
  only:
    - dev
  script:
    - npm install vercel
    - ./node_modules/.bin/vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - ./node_modules/.bin/vercel build --token=$VERCEL_TOKEN
    - ./node_modules/.bin/vercel deploy --prebuilt  --token=$VERCEL_TOKEN

deploy_production:
  stage: deploy
  only:
    - main
  #   rules:
  #     - when: manual
  script:
    - npm install vercel
    - ./node_modules/.bin/vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - ./node_modules/.bin/vercel build --prod --token=$VERCEL_TOKEN
    - ./node_modules/.bin/vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
